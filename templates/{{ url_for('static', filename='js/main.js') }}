// === Real-Time Stats Fetch ===
async function fetchStats() {
    try {
        const res = await fetch('/stats');
        const data = await res.json();

        document.getElementById('cpu-meter').innerText = data.cpu + '%';
        document.getElementById('mem-meter').innerText = data.memory + '%';
        document.getElementById('net-up').innerText = data.net_sent + ' MB';
        document.getElementById('net-down').innerText = data.net_recv + ' MB';

        const threat = document.getElementById('threat-level');
        const max = Math.max(data.cpu, data.memory);
        if (max > 85) {
            threat.innerText = "Critical";
            threat.style.color = '#ff0033';
            threat.style.textShadow = '0 0 15px #ff0033';
        } else if (max > 60) {
            threat.innerText = "High";
            threat.style.color = '#ffaa00';
            threat.style.textShadow = '0 0 10px #ffaa00';
        } else {
            threat.innerText = "Low";
            threat.style.color = '#00ff99';
            threat.style.textShadow = '0 0 10px #00ff99';
        }

        // Update Silent Mode button
        const silentBtn = document.getElementById('silent-toggle');
        if (data.silent) {
            silentBtn.classList.add('active');
            silentBtn.textContent = 'Silent Mode: ON';
        } else {
            silentBtn.classList.remove('active');
            silentBtn.textContent = 'Silent Mode: OFF';
        }

    } catch (err) {
        console.error("Stats error:", err);
    }
}

// === Real-Time Log Fetch ===
async function fetchLogs() {
    try {
        const res = await fetch('/logs');
        const data = await res.json();

        const logBox = document.getElementById('log-box');
        logBox.innerHTML = ''; // Clear existing logs

        data.logs.forEach(line => {
            const div = document.createElement('div');
            div.classList.add('log-line');
            div.textContent = line.trim();
            logBox.appendChild(div);
        });

        logBox.scrollTop = logBox.scrollHeight; // Auto-scroll
    } catch (err) {
        console.error("Log error:", err);
    }
}

// === Silent Mode Toggle ===
async function toggleSilent() {
    try {
        const res = await fetch('/silent', { method: 'POST' });
        const data = await res.json();
        fetchStats(); // Immediately refresh button status
    } catch (err) {
        console.error("Silent toggle error:", err);
    }
}

// === Trigger Report Download ===
function downloadReport() {
    window.open('/report', '_blank');
}

// === Auto Refresh Stats & Logs ===
setInterval(() => {
    fetchStats();
    fetchLogs();
}, 3000);

// === On Load ===
window.onload = () => {
    fetchStats();
    fetchLogs();
};
